# Alembic configuration file for Agent Builder Hub database migrations
# External dependencies:
# alembic==1.12.0
# sqlalchemy==2.0.0

[alembic]
# Migration script location
script_location = src/db/migrations

# Migration file naming template with timestamp and descriptive slug
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s

# Use UTC for all timestamps
timezone = UTC

# Maximum length for migration file slugs
truncate_slug_length = 40

# Enable access to revision configuration in env.py
revision_environment = true

# Disable sourceless mode to maintain migration scripts
sourceless = false

# Version locations configuration
version_locations = %(here)s/versions
version_path_separator = os

# File encoding for generated files
output_encoding = utf-8

# Schema comparison settings
compare_type = true
compare_server_default = true
include_schemas = true
include_name = true
include_symbol = true

[post_write_hooks]
# Code formatting and linting hooks
hooks = black,isort,pylint

# Black code formatter configuration
black.type = console_scripts
black.entrypoint = black
black.options = -l 100

# isort import sorter configuration
isort.type = console_scripts
isort.entrypoint = isort
isort.options = --profile black

# pylint code analyzer configuration
pylint.type = console_scripts
pylint.entrypoint = pylint
pylint.options = --rcfile=pylintrc

[loggers]
keys = root,sqlalchemy,alembic,migration
level = INFO
handlers = console,cloudwatch
qualname = alembic
formatter = detailed

[handlers]
keys = console,cloudwatch,file
level = NOTSET
formatter = detailed

# Console logging handler
console.class = logging.StreamHandler
console.stream = ext://sys.stdout

# CloudWatch logging handler
cloudwatch.class = watchtower.CloudWatchLogHandler
cloudwatch.log_group = agent-builder-hub

# File logging handler with rotation
file.class = logging.handlers.RotatingFileHandler
file.filename = logs/alembic.log
file.maxBytes = 10485760
file.backupCount = 10

[formatters]
keys = generic,detailed,json

# Generic log format
generic.format = %(levelname)-5.5s [%(name)s] %(message)s
generic.datefmt = %H:%M:%S

# Detailed log format with timestamp and line numbers
detailed.format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)d] %(message)s
detailed.datefmt = %Y-%m-%d %H:%M:%S

# JSON log formatter
json.class = pythonjsonlogger.jsonlogger.JsonFormatter
json.format = %(asctime)s %(levelname)s %(name)s %(message)s

[databases]
# Database connection configuration with optimized pool settings
sqlalchemy.url = postgresql+psycopg2://%(DB_USER)s:%(DB_PASS)s@%(DB_HOST)s:%(DB_PORT)s/%(DB_NAME)s
sqlalchemy.pool_size = 5
sqlalchemy.max_overflow = 10
sqlalchemy.pool_timeout = 30
sqlalchemy.pool_recycle = 1800
sqlalchemy.pool_pre_ping = true
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.isolation_level = READ COMMITTED

# SSL configuration for secure database connections
sqlalchemy.connect_args = {"sslmode": "verify-full", "sslcert": "/etc/ssl/certs/client-cert.pem", "sslkey": "/etc/ssl/private/client-key.pem", "sslrootcert": "/etc/ssl/certs/ca.pem"}